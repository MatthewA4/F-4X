<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2017  Matthew Anderson

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

See LICENSE file for the GPL version 2 text.
-->

<PropertyList>
	<sim>
		<author>Matthew Anderson(3D,FDM), Joshua Davidson/it0uchpods (FCS)</author>
		<description>F-4J/S Phantom II</description>
		<long-description>
		The F-4J/S Phantom II is Cold War era, twin-seat interceptor/fighter bomber.
		The S model is an upgraded F-4J, with upgraded avionics being the key upgrades.
		The J/S model is an F-4S without the slat upgrades; not many produced. First flew in 1977.
		</long-description>
		<aircraft-version>0.1</aircraft-version>
		<rating>
			<FDM type="int">0</FDM>
			<systems type="int">0</systems>
			<cockpit type="int">0</cockpit>
			<model type="int">0</model>
		</rating>
		<status>Alpha</status>

		<current-view>
		  <z-offset-dec-step type="double">0.0</z-offset-dec-step>
		  <z-offset-inc-step type="double">0.0</z-offset-inc-step>
		  <can-change-z-offset type="bool">false</can-change-z-offset>

		  <z-offset-default type="float">30.0</z-offset-default>
		  <z-offset-min-m type="float">10.0</z-offset-min-m>
		  <z-offset-max-m type="float">200.0</z-offset-max-m>
		</current-view>

		<startup>
			<splash-texture>Aircraft/F-4X/splash-1.png</splash-texture>
			<splash-texture>Aircraft/F-4X/thumbnail.jpg</splash-texture>
		</startup>

		<previews>
			<preview>
				<type>exterior</type>
				<splash type="bool">true</splash>
				<path>thumbnail.jpg</path>
			</preview>
		</previews>

		<flight-model>jsb</flight-model>
		<aero>F-4S-fdm</aero>

		<model>
			<path>Aircraft/F-4X/Models/F-4S.xml</path>
		</model>

		<hud n="0">
			<enable3d n="0">false</enable3d>
			<enable3d n="1">false</enable3d>
		</hud>

		<systems>
		  <property-rule n="100">
                    <path>Systems/mouse-zoom.xml</path>
		  </property-rule>
		</systems>

		<chase-distance-m type="double" archive="y">-30.0</chase-distance-m>
		<view>
			<name>Cockpit View</name>
			<type>lookfrom</type>
			<internal type="bool">true</internal>
			<config>
				<from-model type="bool">true</from-model>
				<from-model-idx type="int">0</from-model-idx>
				<x-offset-m type="double">0</x-offset-m>
				<y-offset-m type="double">0.79</y-offset-m>
				<z-offset-m type="double">-3.5415</z-offset-m>
			</config>
		</view>
	</sim>

	<controls>
		<flight>
			<elevator-trim type="double">-0.05</elevator-trim>
		</flight>
	</controls>

	<fdm>
	  <jsbsim>
	    <misc>
	      <stores>
		<onboard type="double">0.0</onboard>
	      </stores>
	    </misc>
	  </jsbsim>
	</fdm>

	<consumables>
          <fuel>
            <tank n="0"><name>Fuel Cell #1</name></tank>
            <tank n="1"><name>Fuel Cell #2</name></tank>
            <tank n="2"><name>Fuel Cell #3</name></tank>
            <tank n="3"><name>Fuel Cell #4</name></tank>
            <tank n="4"><name>Fuel Cell #5</name></tank>
            <tank n="5"><name>Fuel Cell #6</name></tank>
            <tank n="6"><name>Fuel Cell #7</name></tank>
            <tank n="7"><name>Right Wing Tank</name></tank>
            <tank n="8"><name>Left Wing Tank</name></tank>
          </fuel>
	</consumables>

	<fdm n="0">
		<jsbsim n="0">
			<hydromech n="0">
				<sas-pitch type="bool">1</sas-pitch>
				<sas-roll type="bool">1</sas-roll>
				<sas-yaw type="bool">1</sas-yaw>
			</hydromech>
		</jsbsim>
	</fdm>

	<input n="0">
	  <mice n="0">
	    <mouse n="0">
	      <mode n="0">
		<button n="3">
		  <binding n="0">
		    <script></script>
		  </binding>
		  <binding n="1">
		    <condition>
		      <and>
			<property>/devices/status/mice/mouse[0]/button[2]</property>
			<not><property>/sim/mouse/right-button-mode-cycle-enabled</property></not>
		      </and>
		    </condition>
		    <command>nasal</command>
		    <script>
		      if (getprop("/sim/current-view/can-change-z-offset")) {
		      var distance = getprop("/sim/current-view/z-offset-m");
		      var multiple = getprop("/sim/current-view/z-offset-inc-step");
		      var min_dist = getprop("/sim/current-view/z-offset-min-m");

		      distance = math.round(std.min(-min_dist, distance + multiple) / multiple) * multiple;
		      setprop("/sim/current-view/z-offset-m", distance);

		      gui.popupTip(sprintf("%d meters", abs(distance)));
		      } else {
		      view.decrease();
		      }
		    </script>
		  </binding>
		</button>
		<button n="4">
		  <binding n="0">
		    <script></script>
		  </binding>
		  <binding n="1">
		    <condition>
		      <and>
			<property>/devices/status/mice/mouse[0]/button[2]</property>
			<not><property>/sim/mouse/right-button-mode-cycle-enabled</property></not>
		      </and>
		    </condition>
		    <command>nasal</command>
		    <script>
		      if (getprop("/sim/current-view/can-change-z-offset")) {
		      var distance = getprop("/sim/current-view/z-offset-m");
		      var multiple = getprop("/sim/current-view/z-offset-dec-step");
		      var max_dist = getprop("/sim/current-view/z-offset-max-m");

		      distance = math.round(std.max(-max_dist, distance + multiple) / multiple) * multiple;
		      setprop("/sim/current-view/z-offset-m", distance);

		      gui.popupTip(sprintf("%d meters", abs(distance)));
		      } else {
		      view.increase();
		      }
		    </script>
		  </binding>
		</button>
	      </mode>
	    </mouse>
	  </mice>
	  <keyboard n="0">
	    <key n="24">
	      <name>Ctrl-x</name>
	      <desc>Reset zoom to default</desc>
	      <binding>
		<command>nasal</command>
		<script>
		  if (getprop("/sim/current-view/can-change-z-offset")) {
		  setprop("/sim/current-view/z-offset-m", getprop("/sim/current-view/z-offset-default") * -1);

		  gui.popupTip(sprintf("%d meters", getprop("/sim/current-view/z-offset-default")));
		  } else {
		  setprop("/sim/current-view/field-of-view", getprop("/sim/view/config/default-field-of-view-deg"));
		  }
		</script>
	      </binding>
	    </key>
	    <key n="88">
	      <name>X</name>
	      <desc>Increase field of view</desc>
	      <repeatable type="bool">true</repeatable>
	      <binding>
		<command>nasal</command>
		<script>
		  if (getprop("/sim/current-view/can-change-z-offset")) {
		  var distance = getprop("/sim/current-view/z-offset-m");
		  var multiple = getprop("/sim/current-view/z-offset-dec-step");
		  var max_dist = getprop("/sim/current-view/z-offset-max-m");

		  distance = math.round(std.max(-max_dist, distance + multiple) / multiple) * multiple;
		  setprop("/sim/current-view/z-offset-m", distance);

		  gui.popupTip(sprintf("%d meters", abs(distance)));
		  } else {
		  view.increase();
		  }
		</script>
	      </binding>
	    </key>
	    <key n="120">
	      <name>x</name>
	      <desc>Decrease field of view</desc>
	      <repeatable type="bool">true</repeatable>
	      <binding>
		<command>nasal</command>
		<script>
		  if (getprop("/sim/current-view/can-change-z-offset")) {
		  var distance = getprop("/sim/current-view/z-offset-m");
		  var multiple = getprop("/sim/current-view/z-offset-inc-step");
		  var min_dist = getprop("/sim/current-view/z-offset-min-m");

		  distance = math.round(std.min(-min_dist, distance + multiple) / multiple) * multiple;
		  setprop("/sim/current-view/z-offset-m", distance);

		  gui.popupTip(sprintf("%d meters", abs(distance)));
		  } else {
		  view.decrease();
		  }
		</script>
	      </binding>
	    </key>
	  </keyboard>
	</input>

	<sound>
		<path type="string">Aircraft/F-4X/Audio/audio.xml</path>
		<enabled type="bool">true</enabled>
	</sound>

	<nasal>
		<electrical>
			<file>Aircraft/F-4X/Nasal/electrical.nas</file>
		</electrical>

		<J79>
			<file>Aircraft/F-4X/Nasal/J79.nas</file>
		</J79>

		<views>
            <enabled type="bool">false</enabled>
            <file>Aircraft/F-4X/Nasal/views.nas</file>
		</views>
	</nasal>
</PropertyList>
